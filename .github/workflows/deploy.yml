name: deploy
on: push

permissions:
  contents: write  # Allows write access to repository contents
  pages: write     # Allows write access to GitHub Pages
  id-token: write  # Allows write access to the OpenID Connect (OIDC) token

jobs: 
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install dependencies and build frontend
        working-directory: src  # Navigate to the src folder for frontend
        run: |
          npm install
          npm run build

  test: 
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install dependencies and test frontend
        working-directory: src  # Navigate to the src folder for frontend
        run: |
          npm install
          npm test

  deploy:
    needs: test  # Ensures 'deploy' runs only if 'test' succeeds

    permissions:
      contents: write  # Allows write access to repository contents
      pages: write     # Allows write access to GitHub Pages
      id-token: write  # Allows write access to the OpenID Connect (OIDC) token

    environment:
      name: production  # Specifies the production environment as the deployment target
      url: ${{ steps.deployment.outputs.page_url }}  # Gets the deployed page URL from the deployment step

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # Authenticated checkout with permissions

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Start backend server
        working-directory: backend  # Navigate to the backend folder
        run: node server.js &  # Run the backend in the background

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Build frontend
        working-directory: src  # Navigate to the src folder for frontend
        run: |
          npm install
          npm run build

      - name: Upload artifacts
        uses: actions/upload-pages-artifact@v1
        with: 
          path: "src/out"  # Specify the output directory created by npm run build

      - name: Deploy to GitHub Pages
        id: deployment  # Assigns a unique ID to the step
        uses: actions/deploy-pages@v1
